@import "../../../styles/variables";

.message {
  border: 1px solid #d2d0d0;
  padding: 2em;
  font-size: 1.7vw;
  box-shadow: -2px 2px 10px 0px rgba(#444, 0.4);

  @supports(display: grid) {
    display: none;
  }
}

.grid {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-auto-rows: 100px;
  grid-auto-flow: row dense;
}

.item {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  box-sizing: border-box;
  color: #fff;
  grid-column-start: auto;
  grid-row-start: auto;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  background-size: cover;
  background-position: center;
  box-shadow: -2px 2px 10px 0px rgba(#444, 0.4);
  transition: transform 0.3s ease-in-out;
  align-content: center;
  vertical-align: bottom;
  cursor: pointer;

  &:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: black;
    opacity: 0.3;
    transition: opacity 0.3s ease-in-out;
  }

  &:hover {
    transform: scale(1.02);

    &:after {
      opacity: 0;
    }
  }

  &--medium {
    grid-row-end: span 2;
  }

  &--large {
    grid-row-end: span 3;
  }

  &--now-playing {
    box-shadow: 0 0 60px $now-playing-track;
    border: 2px solid $now-playing-track;
  }

  &--full {
    grid-column-end: auto;

    @media screen and (min-width: 768px) {
      grid-column: 1/-1;
      grid-row-end: span 2;
    }
  }

  $debug-grid: false;
  $debug-grid-border: none;

  @if $debug-grid {
    $debug-grid-border: 5px dashed;

    $debug-sizing: border-box;
  }

  $colors: red,
  orange,
  yellow,
  lime,
  blue,
  pink;


  @media only screen and (max-width: $break-width-xxmed) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+4) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+7) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+9) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-xxmed + 1px) and (max-width: $break-width-xmed) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+9) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+13) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+17) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-xmed +1px) and (max-width: $break-width-med) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+13) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+19) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+25) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-med + 1px) and (max-width: $break-width-large) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+9) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+13) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+17) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-large + 1px) and (max-width: $break-width-xlarge) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+13) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+19) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+25) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-xlarge + 1px) and (max-width: $break-width-xxlarge) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+7) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+7) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+9) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-xxlarge + 1px) and (max-width: $break-width-xxxlarge) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+13) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+13) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+17) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-xxxlarge + 1px) and (max-width: $break-width-huge) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+13) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+13) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+17) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-huge + 1px) and (max-width: $break-width-xhuge) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+19) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+19) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+25) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-xhuge + 1px) and (max-width: $break-width-xxhuge) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+19) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+19) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+25) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-xxhuge + 1px) and (max-width: $break-width-xxxhuge) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+19) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+19) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+25) {
        display: none;
      }
    }
  }

  @media only screen and (min-width:$break-width-xxxhuge + 1px) and (max-width: $break-width-maximum) {
    @media only screen and (max-height: $break-height-med) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+37) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-med + 1px) and (max-height: $break-height-large) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+37) {
        display: none;
      }
    }

    @media only screen and (min-height: $break-height-large + 1px) {
      border: $debug-grid-border nth($colors, random(length($colors)));

      &:nth-child(n+37) {
        display: none;
      }
    }
  }

  @media only screen and (max-width:$break-width-maximum + 1px) {
    &:nth-child(n+37) {
      display: none;
    }
  }

  &__details {
    z-index: 1;
    height: 40px;
    width: 100%;
    background: #00000081;
    color: #fff;
    padding-left: 5px;
    padding-right: 5px;
    align-content: center;
    vertical-align: bottom;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    &__album {
      color: #fff;
    }

    &__artist {
      align-content: center;
      vertical-align: bottom;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;

      &:before {
        content: '-';
      }
    }
  }
}